/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'jacoco'
}

apply plugin: 'io.spring.dependency-management'

repositories {
    mavenLocal()
    maven {
        url = uri('https://maven.aliyun.com/nexus/content/groups/public')
    }
}

dependencies {
    implementation 'cn.jia:jia-core:1.0.20-SNAPSHOT'
    implementation 'cn.jia:jia-api-core:1.0.9-SNAPSHOT'
    implementation 'cn.jia:jia-mapper-common:1.0.0-SNAPSHOT'
    implementation 'cn.jia:jia-mapper-core:1.0.2'
    implementation 'cn.jia:jia-mapper-oauth:1.0.1'
    implementation 'cn.jia:jia-mapper-user:1.0.5-SNAPSHOT'
    implementation 'cn.jia:jia-mapper-isp:1.0.1'
    implementation 'cn.jia:jia-mapper-wx:1.0.3-SNAPSHOT'
    implementation 'cn.jia:jia-mapper-sms:1.0.0'
    implementation 'cn.jia:jia-mapper-task:1.0.6-SNAPSHOT'
    implementation 'cn.jia:jia-mapper-point:1.0.6-SNAPSHOT'
    implementation 'cn.jia:jia-mapper-dwz:1.0.0'
    implementation 'cn.jia:jia-mapper-material:1.0.9'
    implementation 'cn.jia:jia-mapper-kefu:1.0.6-SNAPSHOT'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.6.RELEASE'
    implementation 'cglib:cglib:3.2.3'
    implementation 'com.github.binarywang:weixin-java-mp:3.1.0'
    implementation 'com.github.binarywang:weixin-java-pay:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.3.0'
    implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.13'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.elasticsearch:elasticsearch:7.5.1'
    implementation 'org.elasticsearch.client:elasticsearch-rest-client:7.5.1'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.5.1'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.json:json:20190722'
    implementation 'commons-fileupload:commons-fileupload:1.3.3'
    implementation 'org.apache.commons:commons-pool2:2.7.0'
    implementation 'com.github.xuwei-k:html2image:0.1.0'
    implementation 'net.coobird:thumbnailator:0.4.8'
    implementation 'com.google.zxing:core:3.2.1'
    implementation 'com.google.zxing:javase:3.2.1'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.2'
    runtimeOnly 'mysql:mysql-connector-java:8.0.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    testImplementation 'cn.jia:jia-core-test:1.0.0-SNAPSHOT'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'org.projectlombok:lombok:1.18.12'
    testImplementation('com.alibaba.testable:testable-all:0.5.1')
    testAnnotationProcessor('com.alibaba.testable:testable-processor:0.5.1')
}

group = 'cn.jia'
version = '1.0.0'
description = 'cyf-api-kit'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            artifact bootJar
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://repo.rdc.aliyun.com/repository/129198-release-e6bGka/"
            def snapshotsRepoUrl = "https://repo.rdc.aliyun.com/repository/129198-snapshot-rBWP3V/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username 'OWn4BR'
                password 'SXChl4ak0i'
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    jvmArgs "-javaagent:${classpath.find { it.name.contains("testable-agent") }.absolutePath}"
    useJUnitPlatform()
    testLogging.showStandardStreams = true
//    onOutput { descriptor, event ->
//        if (project.hasProperty('output')) {
//            logger.lifecycle(event.message)
//        }
//    }
}